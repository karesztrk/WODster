# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index()

# Login page
GET     /login                  	controllers.Application.login()
POST    /login                      controllers.Application.authenticate()
GET     /logout                     controllers.Application.logout()

# Registration page
GET     /register                  	controllers.Application.signUp()
POST    /register                  	controllers.Application.register()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

# JavaScript Routing
GET     /javascriptRoutes    		controllers.Application.javascriptRoutes()

# Profile
GET		/profile/settings			controllers.UserController.settings()
POST	/profile/settings			controllers.UserController.save()
GET		/profile/:id				controllers.UserController.profile(id:Long)
POST	/profile/share	   	   		controllers.UserController.share()
POST	/profile/password			controllers.UserController.changePassword()

# Workouts list (look at the default values for pagination parameters)
GET     /workouts                  	controllers.WODController.list(p:Int ?= 0, s ?= "createdAt", o ?= "desc", f ?= "")
GET		/workouts/fetch				controllers.WODController.fetch(q ?= "")

# Blog action
POST	/workouts/attend	   	   	controllers.WODController.attend()
POST	/workouts/comment	   	   	controllers.WODController.comment()

# Add workout
GET     /workouts/new              	controllers.WODController.create()
POST    /workouts                  	controllers.WODController.save()

# Edit existing workout
GET     /workouts/edit/:id        	controllers.WODController.edit(id:Long)
POST    /workouts/:id              	controllers.WODController.update(id:Long)

# View existing workout
GET     /workouts/:id              	controllers.WODController.view(id:Long)

# Delete a workout
#POST    /workouts/:id/delete       controllers.Application.delete(id:Long)

# Database init
GET		/init/users				   	controllers.DataGenerator.saveUsers()
GET		/init/boxes				  	controllers.DataGenerator.saveBoxes()
GET		/init/posts				   	controllers.DataGenerator.savePosts()
GET		/init/records				controllers.DataGenerator.saveRecords()

# Boxes list (look at the default values for pagination parameters)
GET     /box                  	   	controllers.BoxController.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "")

# List the records
GET		/journal/records			controllers.PersonalRecordController.list()
GET		/journal/records/fetch		controllers.PersonalRecordController.fetch()

# Delete a record
POST    /journal/records/delete		controllers.PersonalRecordController.delete()

# Add record
GET     /journal/records/new        controllers.PersonalRecordController.create()
POST    /journal/records            controllers.PersonalRecordController.save()

# Edit a record
GET		/journal/records/:id		controllers.PersonalRecordController.edit(id:Long)

# Update a record
POST	/journal/records/update		controllers.PersonalRecordController.update()
